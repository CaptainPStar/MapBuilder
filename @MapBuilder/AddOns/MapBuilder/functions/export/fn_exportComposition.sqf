_filename = [_this,0,"noFilename"] call bis_fnc_param;
	if(_filename == "") exitWith {systemChat "Error: Export needs a name!";};
	_path = ("MB_FileIO" callExtension format["open_w|export\%1.sqf",_filename]);
	systemChat format["Opening %1",_path];
	private["_number","_digits","_acc"];
	_selectionCenter = [] call MB_fnc_calcSelectionCenter;
	"MB_FileIO" callExtension "write|//This file was generated by Map Builder";
	"MB_FileIO" callExtension "write|//To load this objects copy this script to your mission and put";
	"MB_FileIO" callExtension format["write|// nil = [] execVM ""%1.sqf"";",_filename];
	"MB_FileIO" callExtension "write|//in your init.sqf or a trigger-activation.";
	"MB_FileIO" callExtension "write|private[""_obj"",""_objpos"",""_dir""];";
	"MB_FileIO" callExtension "write|_pos = [_this,0] call bis_fnc_param;";
	{
		if(!isNull(_x)) then {
			_obj = _x;
			_type = (typeof _obj);

			
			_pos = [_obj,[0,0]] call MB_fnc_exactPosition;
			_pitch = _obj getvariable "MB_ObjVar_Pitch";
			_bank = _obj getvariable "MB_ObjVar_Bank";
			_yaw = _obj getvariable "MB_ObjVar_Yaw";
			//_scale = _obj getvariable "MB_ObjVar_Scale";
			
			_dirAndUp = [_pitch,_bank,_yaw] call MB_fnc_CalcDirAndUpVector;
			_string = format["write|_objpos = _pos vectoradd %1;",_pos vectorDiff _selectionCenter];
			systemChat ("MB_FileIO" callExtension _string);
			_string = format["write|_obj = ""%1"" createvehicle _objpos;",_type];
			systemChat ("MB_FileIO" callExtension _string);
			_string = format["write|_dir = %1;",_yaw];
			systemChat ("MB_FileIO" callExtension _string);

		};
	} foreach MB_Selected;
	systemChat ("MB_FileIO" callExtension "close");